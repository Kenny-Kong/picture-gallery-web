cmdhistory=["(use 'picture-gallery.models.schema)" "(create-users-table)" "(use 'picture-gallery.repl)" "(start-server)" "(sql/with-connection db\\n(sql/with-query-results res [\\"select * from users\\"] (println res)))" "(use 'picture-gallery.models.db)" "(sql/with-connection db\\n   (sql/with-query-results res [\\"select * from users\\"] (println res)))" "(use 'picture-gallery.models.db)" "(sql/with-connection db\\n(sql/with-query-results res [\\"select * from users\\"] (println res)))" "(get-users)\\\\" "(get-users)" "(picture-gallery.models.db/get-users)" "(use 'picture-gallery.models.db)" "(get-users)" "(start-server)" "(use 'picture-gallery.models.db)" "(get-users)" "(start-server)" "(create-configadmin-table)" "(use 'config-admin.models.db)" "(start-server)" "(ImageIO/write\\n(scale (ImageIO/read (io/input-stream \\"image.jpg\\")) 0.5 150 150)\\n\\"jpeg\\"\\n(File. \\"scaled.jpg\\"))" "(use 'picture-gallery.routes.upload)" "(ImageIO/write\\n   (scale (ImageIO/read (io/input-stream \\"image.jpg\\")) 0.5 150 150)\\n   \\"jpeg\\"\\n   (File. \\"scaled.jpg\\"))" "(writeImg)" "(ImageIO/write\\n(scale-image (io/input-stream \\"galleries/image.jpg\\"))\\n\\"jpeg\\"\\n(File. \\"galleries/scaled.jpg\\"))" "(use 'picture-gallery.routes.upload)" "(ImageIO/write\\n   (scale-image (io/input-stream \\"galleries/image.jpg\\"))\\n   \\"jpeg\\"\\n   (File. \\"galleries/scaled.jpg\\"))" "(javax.imageio.ImageIO/write\\n      (scale-image (io/input-stream \\"galleries/image.jpg\\"))\\n      \\"jpeg\\"\\n      (File. \\"galleries/scaled.jpg\\"))" "(javax.imageio.ImageIO/write\\n         (scale-image (clojure.java.io/input-stream \\"galleries/image.jpg\\"))\\n         \\"jpeg\\"\\n         (File. \\"galleries/scaled.jpg\\"))" "(javax.imageio.ImageIO/write\\n            (scale-image (clojure.java.io/input-stream \\"galleries/image.jpg\\"))\\n            \\"jpeg\\"\\n            (java.io.File. \\"galleries/scaled.jpg\\"))" "(javax.imageio.ImageIO/write\\n               (scale-image (clojure.java.io/input-stream \\"galleries/xiaoxin.jpeg\\"))\\n               \\"jpeg\\"\\n               (java.io.File. \\"galleries/scaled.jpg\\"))" "({{\:params 123456, \:params1 78963} \:params})" "({\:params 123456, \:params1 78963} \:params)" "({\:params 123456, \:params1 78963} \:params1)" "(\:params {\:params 123456, \:params1 78963})" "(start-server)" "(images-by-user \\"foo\\")" "(picture-gallery.models.db/images-by-user \\"foo\\")" "(picture-gallery.models.schema/create-images-table)" "(use 'picture-gallery.models.schema)" "(create-images-table)" "(picture-gallery.models.db/images-by-user \\"foo\\")" "(picture-gallery.models.db/images-by-user \\"asp\\")" "(start-server)" "(is (\= 4 (+ 2 2)))\\n(is (\= 5 (+ 2 2)))" "(use 'clojure.test)" "(is (\= 4 (+ 2 2)))\\n(is (\= 5 (+ 2 2)))" "(is (even? 2))\\n(is (instance? String 123))" "(testing \\"Collections\\"\\n(is (coll? {}))\\n(is (coll? \#{}))\\n(is (coll? []))\\n(is (coll? '())))" "(deftest collections-test\\n(testing \\"Collections\\"\\n(is (coll? {}))\\n(is (coll? \#{}))\\n(is (coll? []))\\n(is (coll? '()))))" "(collections-test)" "(start-server)" "(use 'picture-gallery.repl)" "(start-server)" "(stop-server)" "(start-server)"]
eclipse.preferences.version=1
